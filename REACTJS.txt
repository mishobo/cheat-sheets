# new rect app
> npx create-react-app react-frontend
> npm run build
> npm start

# Create Redux Store
> npm install redux redux-thunk
> npm install --save-dev redux-devtools-extension


# production build
> yarn build
> npx serve -s build

# To files delete
> App.css, App.test.js

# check node version
> node -v

# check npm version
> npm -v

# update npm
> npm install -g npm

# build a react project from scratch
1. initiate a node project
> npm init -y

2. Install dependencies 
> npm i webpack babel-loader @babel/preset-react @babel/core babel-preset-react html-webpack-plugin webpack-dev-server css-loader style-loader @babel/plugin-proposal-class-properties webpack-cli -D && npm i react react-dom -S

3. create an SRC folder and two index.js and index.html

# see hiden files and folders
> npm run eject

# create react project using vite
> npm createvite@latest ( select project name, react with javascript )

# creating a next.js app
> npx create-next-app@latest <appName>

# install material-ui

npm i @mui/material @emotion/react @emotion/styled @mui/x-data-grid @mui/icons-material react-router-dom@6 react-pro-sidebar formik yup @fullcalendar/core @fullcalendar/daygrid @fullcalendar/timegrid @fullcalendar/list @nivo/core @nivo/pie @nivo/line @nivo/bar @nivo/geo

# delete
> setupTest.js, reportWebVitals.js, logo.svg, App.test.js, App.css 

# hidden elements
> document.querySelector('[data-testid=manual-navigation]').classList.remove('always-hidden')

# react folder structure
src/
  |- app/
     |- App.js                # Main React component
     |- store.js              # Redux Toolkit store configuration
  |- features/
     |- feature1/
        |- feature1Slice.js  # Redux Toolkit Slice configuration for feature1
        |- Feature1.js       # Feature1 component
        |- feature1API.js     # API calls related to feature1
     |- feature2/
        |- feature2Slice.js  # Redux Toolkit Slice configuration for feature2
        |- Feature2.js       # Feature2 component
        |- feature2API.js     # API calls related to feature2
  |- components/
     |- CommonComponent.js    # Commonly used components
  |- pages/
     |- XxxPage.js            # Page component
  |- hooks/
     |- useLocalStorage.js    # Custom hook for storing data in localStorage
     |- useFetch.js           # Custom hook for fetching data from an API
  |- utils/
     |- utilityFunctions.js   # Helper functions
  |- API/
     |- index.js              # API exports
  |- config/
     |- config.js             # Application configuration file
  |- router/
     |- index.js              # React Router configuration
  |- .env                     # Environment variables
  |- index.js                 # Application entry file